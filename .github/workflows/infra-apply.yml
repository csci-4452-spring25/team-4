# This workflow applies Terraform infrastructure changes manually
name: Terraform Infra Apply

on:
    workflow_dispatch:
        inputs:
            environment:
                description: "Environment to apply (dev, prod, etc)"
                required: true
                default: "dev"
jobs:
    terraform-apply:
        runs-on: ubuntu-latest
        steps:
            - name: Checkout code
              uses: actions/checkout@v4

            - name: Configure AWS credentials
              uses: aws-actions/configure-aws-credentials@v4
              with:
                  aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY }}
                  aws-secret-access-key: ${{ secrets.AWS_SECRET_KEY }}
                  aws-region: ${{ vars.AWS_REGION }}

            - name: Set up Terraform
              uses: hashicorp/setup-terraform@v3

            - name: Collect TF_VAR_ environment variables and write to secrets.tfvars
              run: |
                echo "" > ./terraform/secrets.tfvars
                for var in $(printenv | grep ^TF_VAR_ | awk -F= '{print $1}'); do
                  echo "${var#TF_VAR_} = \"$(printenv $var)\"" >> ./terraform/secrets.tfvars
                done

            - name: Terraform Init
              working-directory: ./terraform
              run: terraform init              
              
            - name: Terraform Apply
              working-directory: ./terraform
              run: terraform apply -auto-approve -var="environment=${{ github.event.inputs.environment }}" -var-file="secrets.tfvars"

            - name: Show Terraform Outputs
              working-directory: ./terraform
              run: terraform output

            - name: Set GitHub Actions outputs from Terraform
              id: tf-outputs
              working-directory: ./terraform
              run: |
                  echo "database_url=$(terraform output -raw database_url)" >> $GITHUB_OUTPUT
                  echo "redis_url=$(terraform output -raw redis_url)" >> $GITHUB_OUTPUT
                  echo "s3_bucket=$(terraform output -raw s3_bucket)" >> $GITHUB_OUTPUT
                  echo "aws_ecr_repository=$(terraform output -raw aws_ecr_repository)" >> $GITHUB_OUTPUT
                  echo "aws_ecr_registry=$(terraform output -raw aws_ecr_registry)" >> $GITHUB_OUTPUT
                  echo "aws_ecs_service=$(terraform output -raw aws_ecs_service)" >> $GITHUB_OUTPUT
                  echo "aws_ecs_cluster=$(terraform output -raw aws_ecs_cluster)" >> $GITHUB_OUTPUT
                  echo "aws_task_def_arn=$(terraform output -raw aws_task_def_arn)" >> $GITHUB_OUTPUT
