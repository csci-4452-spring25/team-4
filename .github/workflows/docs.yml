# Sample workflow for building and deploying a VitePress site to GitHub Pages
#
name: Deploy VitePress site to Pages

on:
  push:
    branches: [ main ]
  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: pages
  cancel-in-progress: false

defaults:
  run:
    working-directory: docs

jobs:
  # Build job
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0 # Not needed if lastUpdated is not enabled
      - uses: pnpm/action-setup@v3
        with:
          package_json_file: docs/package.json
          version: 9
          run_install: |
            cwd: docs
      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: pnpm
          cache-dependency-path: docs/pnpm-lock.yaml
      - name: Setup Pages
        uses: actions/configure-pages@v4
      - name: Install dependencies
        run: pnpm install
      - name: Build with VitePress
        run: pnpm run build
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: docs/.vitepress/dist
      - name: Send Teams Notification
        run: |
            if [ -n "${{ secrets.TEAMS_WEBHOOK_URL }}" ]; then
            curl -H 'Content-Type: application/json' -d '{
                "@type": "MessageCard",
                "@context": "https://schema.org/extensions",
                "summary": "Test run results from GitHub Actions",
                "title": "Test Results",
                "text": "Repository: ${{ github.repository }}\nBranch: ${{ github.ref }}\nStatus: ${{ steps.test.outcome == 'success' && '✅ Tests Passed' || '❌ Tests Failed' }}\n\nTest Output:\n${{ steps.test.outputs.output }}\n\nView run details: ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}",
                "themeColor": "0076D7"
            }' ${{ secrets.TEAMS_WEBHOOK_URL }}
            fi

  # Deployment job
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    needs: build
    runs-on: ubuntu-latest
    name: Deploy
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
