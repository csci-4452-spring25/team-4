# This workflow builds, pushes Docker image to ECR, and updates ECS service
name: Build and Deploy to AWS ECS

on:
    push:
        branches: [main]

jobs:
    build-and-deploy:
        runs-on: ubuntu-latest
        env:
            AWS_REGION: ${{ secrets.AWS_REGION }}
            AWS_ECR_REPOSITORY: ${{ secrets.AWS_ECR_REPOSITORY }}
            AWS_ECS_CLUSTER: ${{ secrets.AWS_ECS_CLUSTER }}
            AWS_ECS_SERVICE: ${{ secrets.AWS_ECS_SERVICE }}
        steps:
            - name: Checkout code
              uses: actions/checkout@v4

            - name: Set up JDK 17
              uses: actions/setup-java@v4
              with:
                  distribution: "temurin"
                  java-version: "17"

            - name: Grant execute permission for gradlew
              run: chmod +x ./gradlew

            - name: Build with Gradle
              run: ./gradlew :app:bootJar

            - name: Set up Docker Buildx
              uses: docker/setup-buildx-action@v3

            - name: Configure AWS credentials
              uses: aws-actions/configure-aws-credentials@v4
              with:
                  aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY }}
                  aws-secret-access-key: ${{ secrets.AWS_SECRET_KEY }}
                  aws-region: ${{ env.AWS_REGION }}

            - name: Login to Amazon ECR
              id: login-ecr
              uses: aws-actions/amazon-ecr-login@v2

            - name: Build, tag, and push image to ECR
              env:
                  AWS_ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
              run: |
                  IMAGE_TAG=latest
                  docker build -t $AWS_ECR_REGISTRY/$AWS_ECR_REPOSITORY:$IMAGE_TAG -f app/Dockerfile ./app
                  docker push $AWS_ECR_REGISTRY/$AWS_ECR_REPOSITORY:$IMAGE_TAG

            - name: Download ECS task definition
              run: |
                  aws ecs describe-task-definition --task-definition spring-app \
                    --query 'taskDefinition' > task-definition.json

            - name: Update image in ECS task definition
              run: |
                  IMAGE_URI=${{ steps.login-ecr.outputs.registry }}/${{ env.AWS_ECR_REPOSITORY }}:latest
                  jq '.containerDefinitions[0].image = "'"$IMAGE_URI"'"' task-definition.json > new-task-def.json

            - name: Register new ECS task definition
              id: register-task-def
              run: |
                  AWS_TASK_DEF_ARN=$(aws ecs register-task-definition --cli-input-json file://new-task-def.json --query 'taskDefinition.taskDefinitionArn' --output text)
                  echo "AWS_TASK_DEF_ARN=$AWS_TASK_DEF_ARN" >> $GITHUB_OUTPUT

            - name: Update ECS service to use new task definition
              run: |
                  aws ecs update-service --cluster $AWS_ECS_CLUSTER --service $AWS_ECS_SERVICE --task-definition ${{ steps.register-task-def.outputs.task_def_arn }}
